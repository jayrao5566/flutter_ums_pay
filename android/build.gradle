group = "com.jajs.umspay"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "2.0.20"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.6.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.jajs.umspay"
    }

    compileSdk = 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
//            dirs project(':usmpay').file('libs')
            dirs 'libs'
        }
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        minSdk = 21
        consumerProguardFiles "consumer-proguard-rules.txt"
    }

    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')

//        使用api引用，防止与其他库冲突
        api 'com.tencent.mm.opensdk:wechat-sdk-android:+'
//        implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//        implementation(name 'qmf-ppplugin-android-3.1.7-ali', ext: 'aar')
//        compileOnly files('libs/qmf-ppplugin-android-3.1.7-ali.aar')
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}


